---
# vim: set tabstop=2 expandtab shiftwidth=2 smarttab :

- name: Create temporary CA directory
  tempfile:
    state: directory
    suffix: .ovpn
  register: ca_tmp
  become: false
  delegate_to: localhost
  changed_when: false
  when:
    - openvpn_role is defined
    - openvpn_role == 'client'

- name: Decrypt CA private files
  copy:
    content: "{{ item.value }}\n"
    dest: '{{ ca_tmp.path }}/{{ item.key }}'
  delegate_to: localhost
  become: false
  with_dict: '{{ openvpn_ca_files }}'
  no_log: true
  changed_when: false
  when:
    - openvpn_role is defined
    - openvpn_role == 'client'

- include_tasks: server.yml
  when:
    - openvpn_role is defined
    - openvpn_role == 'server'

- include_tasks: client-windows.yml
  when:
    - openvpn_role is defined
    - openvpn_role == 'client'
    - ansible_os_family == 'Windows'

- include_tasks: client-unix.yml
  when:
    - openvpn_role is defined
    - openvpn_role == 'client'
    - ansible_os_family == 'Debian' or
      ansible_os_family == 'Kali GNU/Linux' or
      ansible_os_family == 'Fedora' or
      ansible_os_family == 'FreeBSD'

- include_tasks: client-certonly.yml
  when:
    - openvpn_role is defined
    - openvpn_role == 'certonly'

- name: Cleanup extracted temporary keys from {{ ca_tmp.path }}
  file:
    path: '{{ item }}'
    state: absent
  delegate_to: localhost
  with_items:
    - '{{ ca_tmp.path }}/{{ openvpn_filename_key_ca }}'
    - '{{ ca_tmp.path }}/{{ openvpn_filename_cert_ca }}'
    - '{{ ca_tmp.path }}/{{ openvpn_filename_csr }}'
    - '{{ ca_tmp.path }}/{{ openvpn_filename_key }}'
    - '{{ ca_tmp.path }}/{{ openvpn_filename_cert }}'
    - '{{ ca_tmp.path }}/{{ openvpn_filename_ta }}'
    - '{{ ca_tmp.path }}'
  changed_when: false
  when:
    - openvpn_role is defined
    - openvpn_role == 'client'

