---
# vim: set tabstop=2 expandtab shiftwidth=2 smarttab :

- name: Regenerate SSL certificate (MSAD)
  local_action: command /bin/bash ../../3rdParty/MSADCRT.sh "{{ item.item.item.server_name }}" "{{ webvhost_msad_user }}" "{{ webvhost_msad_password }}" "{{ webvhost_msad_server }}" "{{ webvhost_server_admin }}"
  register: regen_ssl
  when:
    - item.item.item.ssl is defined
    - item.item.item.ssl == 'msad'
    - not item.item.stat.exists or item.failed
  with_items: '{{ ssl_valid_remote.results }}'

- name: Upload new SSL certificate (MSAD)
  copy:
    src: '{{ webvhost_msad_ssl_tmp }}/{{ item.item.item.item.server_name }}/{{ item.item.item.item.server_name }}.crt'
    dest: '{{ webvhost_ssl_path }}/{{ item.item.item.item.server_name }}.crt'
    owner: '{{ webvhost_ssl_owner }}'
    group: '{{ webvhost_ssl_group }}'
    mode: '0660'
  when:
    - item.item.item.item.ssl is defined
    - item.item.item.item.ssl == 'msad'
    - not item.item.item.stat.exists or item.item.failed
  with_items: '{{ regen_ssl.results }}'

- name: Upload new SSL private key (MSAD)
  copy:
    src: '{{ webvhost_msad_ssl_tmp }}/{{ item.item.item.item.server_name }}/{{ item.item.item.item.server_name }}.key'
    dest: '{{ webvhost_ssl_path }}/{{ item.item.item.item.server_name }}.key'
    owner: '{{ webvhost_ssl_owner }}'
    group: '{{ webvhost_ssl_group }}'
    mode: '0660'
  when:
    - item.item.item.item.ssl is defined
    - item.item.item.item.ssl == 'msad'
    - not item.item.item.stat.exists or item.item.failed
  with_items: '{{ regen_ssl.results }}'

#---

- name: Check whether SSL CA chain exists (MSAD)
  stat: { path: '{{ webvhost_ssl_path }}/{{ item.server_name }}.ca.crt' }
  register: ssl_ca_crt_remote
  when:
    - item.ssl is defined
    - item.ssl == 'msad'
  with_items: '{{ webvhost_sites }}'

- name: Upload SSL CA chain (MSAD)
  copy:
    src: '{{ webvhost_ca_crt_local }}'
    dest: '{{ webvhost_ssl_path }}/{{ item.item.server_name }}.ca.crt'
    owner: '{{ webvhost_ssl_owner }}'
    group: '{{ webvhost_ssl_group }}'
    mode: '0660'
  when:
    - item.item.ssl is defined
    - item.item.ssl == 'msad'
    - not item.stat.exists
  with_items: '{{ ssl_ca_crt_remote.results }}'

