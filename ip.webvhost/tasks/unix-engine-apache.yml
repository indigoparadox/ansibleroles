---
# vim: set tabstop=2 expandtab shiftwidth=2 smarttab :

# Upload general configs (only during first pass ~do_ssl).

- name: Upload apache config snippets
  template:
    src: 'templates/conf.conf.j2'
    dest: '/etc/apache2/conf-available/{{ item.name }}.conf'
    backup: True
  register: conf_upload
  with_items: '{{ webvhost_conf }}'
  when:
    - webvhost_engine == 'apache'
    - not do_ssl is defined or not do_ssl

# Upload virtualhost configs.

- name: Upload SSL apache virtualhost config
  template:
    src: 'templates/site.conf.j2'
    dest: '/etc/apache2/sites-available/{{ item.name }}.conf'
    backup: True
  register: vhost_upload
  with_items: "{{ webvhost_sites | selectattr('ssl', 'defined') | list }}"
  when:
    - not item.enabled is defined or item.enabled == True
    - do_ssl

- name: Upload non-SSL apache virtualhost config
  template:
    src: 'templates/site.conf.j2'
    dest: '/etc/apache2/sites-available/{{ item.name }}.conf'
    backup: True
  register: vhost_upload
  with_items: "{{ webvhost_sites | rejectattr('ssl', 'defined') | list }}"
  when:
    - not item.enabled is defined or item.enabled == True
    - not do_ssl

# Enable SSL vhost (only during second pass, do_ssl)

- name: Check whether SSL vhost is enabled
  stat:
    path: '/etc/apache2/sites-enabled/{{ item.name }}.conf'
  register: ssl_sites_enabled
  with_items: "{{ webvhost_sites | selectattr('ssl', 'defined') | list }}"
  when:
    - not item.enabled is defined or item.enabled == True
    - do_ssl is defined and do_ssl

- name: Check whether non-SSL vhost is enabled
  stat:
    path: '/etc/apache2/sites-enabled/{{ item.name }}.conf'
  register: ptx_sites_enabled
  with_items: "{{ webvhost_sites | rejectattr('ssl', 'defined') | list }}"
  when:
    - not do_ssl is defined or not do_ssl
    - not item.enabled is defined or item.enabled == True

# Enable any vhosts detected as disabled above but configged as enabled.

- name: Enable vhost
  command: 'a2ensite {{ item.item.name }}'
  when:
    - not item.item.enabled is defined or item.item.enabled == True
    - item.stat is defined and not item.stat.exists
  with_items:
    - '{{ ptx_sites_enabled.results }}'
    - '{{ ssl_sites_enabled.results }}'

# Restart if we need to.

- name: Check whether anything has changed
  set_fact:
    vhosts_changed: True
  with_items:
    - '{{ ptx_sites_enabled.results }}'
    - '{{ ssl_sites_enabled.results }}'
    - '{{ vhost_upload.results }}'
  when:
    - not item.item.enabled is defined or item.item.enabled == True
    - (item.stat is defined and not item.stat.exists) or
      (item.changed is defined and item.changed)

- name: Restart apache
  service:
    name: apache2
    state: restarted
  when: vhosts_changed is defined and vhosts_changed

