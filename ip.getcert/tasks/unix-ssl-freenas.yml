---
# vim: set tabstop=2 expandtab shiftwidth=2 smarttab :

# common_name:
# csr_path:
# privkey_path:
# cert_path:
# ca_cert_path:

- name: Load common variables
  include_vars: common.yml

- name: Load OS-specific variables
  include_vars: '{{ item }}'
  with_first_found:
    - '{{ ansible_os_family }}.yml'
    - default.yml

- include_tasks: 'unix-ssl-all.yml'

- name: Fetch SSL certificate inventory (FreeNAS)
  uri:
    url: '{{ getcert_freenas_api_url }}/api/v1.0/system/certificate'
    method: GET
    user: '{{ getcert_freenas_api_user }}'
    password: '{{ getcert_freenas_api_password }}'
    body_format: json
    force_basic_auth: yes
    validate_certs: False
  delegate_to: localhost
  register: ssl_inventory
  no_log: true

- name: Upload existing SSL certificate (FreeNAS)
  copy:
    dest: '{{ cert_path }}'
    content: >
      {{ item.cert_certificate }}{{ getcert_freenas_ca }}
  when:
    - common_name == item.cert_common
    - not ssl_crt_remote.stat.exists or ssl_valid_remote.failed
  with_items:
  - '{{ ssl_inventory.json }}'
  no_log: true

- name: Upload existing SSL private key (FreeNAS)
  copy:
    dest: '{{ privkey_path }}'
    content: >
      {{ item.cert_privatekey }}
  when:
    - common_name == item.cert_common
    - not ssl_key_remote.stat.exists
  with_items:
  - '{{ ssl_inventory.json }}'
  no_log: true

