---
# vim: set tabstop=2 expandtab shiftwidth=2 smarttab :

- include_tasks: 'unix-ssl-all.yml'

- name: Install certbot ACME client
  package:
    name: certbot
    state: present
  when: getcert_pkg_certbot is defined and getcert_pkg_certbot

- name: Create ACME group
  group:
    name: '{{ getcert_le_user.group }}'
    gid: '{{ getcert_le_user.gid }}'
    state: present

- name: Create ACME user
  user:
    name: '{{ getcert_le_user.name }}'
    shell: '{{ getcert_le_user.shell }}'
    uid: '{{ getcert_le_user.uid }}'
    group: '{{ getcert_le_user.group }}'
    home: '{{ getcert_le_user.home }}'
    createhome: yes
    groups: '{{ getcert_le_user.groups }}'

- name: Create ACME directories
  file:
    path: '{{ item.value }}'
    state: directory
    owner: '{{ getcert_le_user.name }}'
    group: '{{ getcert_le_user.group }}'
  with_dict: '{{ getcert_le_dirs }}'

- name: Verify ACME working directory permissions
  #command: 'chown -R {{ getcert_le_user.name }}:{{ getcert_le_user.group }} {{ getcert_le_dirs.work }}'
  file:
    path: '{{ getcert_le_dirs.work }}'
    owner: '{{ getcert_le_user.name }}'
    group: '{{ getcert_le_user.group }}'
    recurse: yes

- name: Renew SSL certificate (ACME)
  command: 'certbot renew --agree-tos -m {{ le_mail }} --config-dir {{ getcert_le_dirs.config }} --logs-dir {{ getcert_le_dirs.logs }} --work-dir {{ getcert_le_dirs.work }} --webroot -w {{ document_root }} -d {{ common_name }}'
  when:
    - ssl_crt_remote.stat.exists
    - ssl_key_remote.stat.exists
    - ssl_valid_remote.failed
  register: acme_renew
  become: yes
  become_user: '{{ getcert_le_user.name }}'
  ignore_errors: yes

#- name: Upload certbot config (ACME)
- name: Generate SSL certificate (ACME)
  command: 'certbot certonly --agree-tos -m {{ le_mail }} --config-dir {{ getcert_le_dirs.config }} --logs-dir {{ getcert_le_dirs.logs }} --work-dir {{ getcert_le_dirs.work }} --webroot -w {{ document_root }} -d {{ common_name }}'
  when:
    - not ssl_crt_remote.stat.exists or
      not ssl_key_remote.stat.exists or
      (acme_renew.rc is defined and acme_renew.rc != 0)
  become: yes
  become_user: '{{ getcert_le_user.name }}'

#  template:
#    src: 'templates/acme-renewal.conf.j2'
#    dest: '{{ getcert_certbot_config_dir }}/renewal/{{ item.server_name }}.conf'
#    owner: 'root'
#    group: 'root'
#    mode: '0644'
#  when:
#    - (item.item.item.enabled is defined and item.item.item.enabled) or
#      (not item.item.item.enabled is defined)
#    - item.item.ssl is defined
#    - item.item.ssl == 'acme'
#  with_items: '{{ getcert_sites }}'

