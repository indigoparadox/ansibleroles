---
# vim: set tabstop=2 expandtab shiftwidth=2 smarttab :

- name: Install SMB domain dependencies (Debian)
  apt:
    name:
      - samba
      - krb5-user
      - sssd
      - sssd-tools
      - realmd
      - ldap-utils
      - python-pexpect
      - python3-pexpect
      - policykit-1
      - packagekit
  when:
    - ansible_os_family == 'Debian' or
      ansible_os_family == 'Kali GNU/Linux'
    
- name: Install SMB domain dependencies (RedHat)
  dnf:
    name:
      - samba
      - krb5-workstation
      - sssd
      - realmd
      - openldap-clients
      - policycoreutils-pythOn
      - sssd-tools
      - libnss-sss
      - libpam-sss
  when:
      ansible_os_family == 'RedHat' or
      ansible_os_family == 'CentOS'

#- name: Add domain configuration stanza to krb5.conf
#  blockinfile:
#    path: /etc/krb5.conf
#    block: |2
#      {{ smb_domain_name | upper }} = \{
#      kdc = {{ smb_domain_controller_names[0] }}
#      admin_server = {{ smb_domain_controller_names[0] }}
#      default_domain = {{ smb_domain_name }}
#      }

- name: Upload kerberos configuration
  template:
    src: templates/krb5.conf.j2
    dest: /etc/krb5.conf
  register: krb_config

- name: Add domain controllers to hosts file
  lineinfile:
    dest: /etc/hosts
    regexp: '.*{{ host.0 }}$'
    line: "{{ host.1 }} {{ host.0.split('.')[0] }} {{ host.0 }}"
  with_together:
    - '{{ smb_domain_controller_names }}'
    - '{{ smb_domain_controller_ips }}'
  loop_control:
    loop_var: host

- name: Check domain status
  shell: /bin/bash -c "/usr/sbin/realm discover {{ smb_domain_name }} | grep -q 'configured. kerberos-member'"
  register: domain_status
  changed_when: false
  ignore_errors: true
 
- name: Join domain
  expect:
    command: /bin/bash -c '/usr/sbin/realm join {{ smb_domain_name }} --user={{ smb_domain_user }}'
    responses:
      Password.*: '{{ smb_domain_password }}'
  when: domain_status.rc != 0

- name: Upload samba configuration
  template:
    src: templates/debian-smb.conf.j2
    dest: /etc/samba/smb.conf
  register: smb_config

- name: Create share directories
  file:
    path: '{{ share.value.path }}'
    state: directory
  with_dict: '{{ smb_shares }}'
  loop_control:
    loop_var: share

- name: Restart samba services
  systemd:
    name: '{{ item }}'
    state: restarted
  with_items:
    - smbd
    - nmbd
  when: smb_config.changed

- name: Check samba domain status
  shell: /bin/bash -c "/usr/bin/net ads info"
  register: samba_domain_status
  changed_when: false
  ignore_errors: true

- name: Check kerberos ticket status
  shell: /bin/bash -c "/usr/bin/klist | grep -q 'krbtgt/{{ smb_domain_name | upper }}@{{ smb_domain_name | upper }}'"
  register: krb_ticket
  changed_when: false
  ignore_errors: true
  when: domain_status.rc == 255
 
- name: Create kerberos ticket
  expect:
    command: /bin/bash -c '/usr/bin/kinit {{ smb_domain_user }}'
    responses:
      Password.*: '{{ smb_domain_password }}'
  when: krb_ticket.rc is defined and krb_ticket.rc != 0

- name: Join samba to domain
  shell: /bin/bash -c "/usr/bin/net ads join -k"
  when: domain_status.rc == 255
 
